# -*- coding: utf-8 -*-
"""SVR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JGYXDoa3JuOmQxCSkGLhC7yO3fyer-lT
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from sklearn.svm import SVR 
import matplotlib.pyplot as plt 
import pandas as pd 
from sklearn.model_selection import train_test_split

# %matplotlib inline

!pip install stockai



from stockai import Stock

td = Stock('TD.TO')
prices_list = td.get_historical_prices('2019-01-01', '2019-01-30')

df = pd.DataFrame.from_dict(prices_list)
df.head()

df = df[['adjclose']]
print(df.head())

forecast_out = 5
df['Prediction'] = df[['adjclose']].shift(-forecast_out)
print(df.tail())

X = np.array(df.drop(['Prediction'],1))
X = X[:-forecast_out]
print(X)

y = np.array(df['Prediction'])
y = y[:-forecast_out]
print(y)

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1) 
svr_rbf.fit(x_train, y_train)

x_forecast = np.array(df.drop(['Prediction'],1))[-forecast_out:]
print(x_forecast)

svm_prediction = svr_rbf.predict(x_forecast)
print(svm_prediction)

def get_plot (model_pred):
  plt.scatter(model_pred, x_forecast, color="blue")
  plt.plot(x_forecast, x_forecast, color='red', linewidth=2)

get_plot(svm_prediction)

